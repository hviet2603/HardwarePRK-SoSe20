# //  Questa Sim-64
# //  Version 10.2c_5 linux_x86_64 Nov 19 2013
# //
# //  Copyright 1991-2013 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //
project open /afs/tu-berlin.de/home/v/vincenthp2603/irb-ubuntu/HardwarePratikum/HardwarePRK-SoSe20/Blatt10/Vivado_WORK/Tutorial/project10
# Loading project project10
vcom -work ./work/ ./src/*.vhd
# QuestaSim-64 vcom 10.2c_5 Compiler 2013.11 Nov 19 2013
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package ArmTypes
# -- Compiling entity ArmArithInstructionCtrl
# -- Compiling architecture behave of ArmArithInstructionCtrl
# -- Loading package NUMERIC_STD
# -- Loading package std_logic_textio
# -- Loading entity ArmArithInstructionCtrl
# -- Loading package ArmTypes
# -- Loading entity ArmArithInstructionCtrl
# -- Loading entity ArmCoarseInstructionDecoder
# -- Compiling entity ArmArithInstructionCtrl_tb
# -- Compiling architecture bench of ArmArithInstructionCtrl_tb
# -- Compiling entity ArmConditionCheck
# -- Compiling architecture behave of ArmConditionCheck
# -- Compiling package ArmConfiguration
# -- Loading package ArmGlobalProbes
# -- Loading package ArmConfiguration
# -- Loading package ArmRegaddressTranslation
# -- Compiling entity ArmControlPath
# -- Compiling architecture behave of ArmControlPath
# -- Compiling entity ArmCopDecoder
# -- Compiling architecture behavioral of ArmCopDecoder
# -- Compiling entity ArmCore
# -- Compiling architecture BEHAVE of ArmCore
# -- Loading entity ArmControlPath
# -- Loading entity ArmInstructionAddressRegister
# -- Loading entity ArmDataReplication
# -- Loading entity ArmRegfile
# -- Loading package MATH_REAL
# -- Loading entity MUX
# -- Loading entity ArmBarrelShifter
# -- Loading entity ArmShifter
# -- Loading entity ArmALU
# -- Loading entity ArmMultiplier
# -- Loading package ArmConfiguration
# -- Loading entity ArmProgramStatusRegister
# -- Loading entity ArmWordManipulation
# -- Loading entity ArmDataPath
# -- Loading package ArmFilePaths
# -- Loading package TB_Tools
# -- Compiling entity ArmCore_tb
# -- Compiling architecture BEHAVE of ArmCore_tb
# ** Warning: ./src/ArmCore_tb.vhd(31): (vcom-1236) Shared variables must be of a protected type.
# ** Warning: ./src/ArmCore_tb.vhd(34): (vcom-1236) Shared variables must be of a protected type.
# ** Warning: ./src/ArmCore_tb.vhd(40): (vcom-1236) Shared variables must be of a protected type.
# ** Warning: ./src/ArmCore_tb.vhd(43): (vcom-1236) Shared variables must be of a protected type.
# ** Warning: ./src/ArmCore_tb.vhd(46): (vcom-1236) Shared variables must be of a protected type.
# -- Loading entity ArmCore
# -- Compiling entity ArmDelayShiftRegister
# -- Compiling architecture structure of ArmDelayShiftRegister
# -- Compiling package ArmFilePaths
# -- Compiling package body ArmFilePaths
# -- Loading package ArmFilePaths
# -- Compiling package ArmGlobalProbes
# -- Compiling package body ArmGlobalProbes
# -- Loading package ArmGlobalProbes
# -- Compiling entity ArmShiftRecoder
# -- Compiling architecture behave of ArmShiftRecoder
# -- Loading package ArmGlobalProbes
# -- Compiling entity ArmTop
# -- Compiling architecture behave of ArmTop
# -- Loading package ArmFilePaths
# -- Loading package TB_Tools
# -- Compiling entity ArmTop_tb
# -- Compiling architecture testbench of ArmTop_tb
# ** Warning: ./src/ArmTop_tb.vhd(31): (vcom-1236) Shared variables must be of a protected type.
# ** Warning: ./src/ArmTop_tb.vhd(143): (vcom-1236) Shared variables must be of a protected type.
# ** Warning: [9] ./src/ArmTop_tb.vhd(33): (vcom-1013) Initial value of "TEST_FILE_PATH" depends on value of signal "TESTDATA_FOLDER_PATH".
# -- Compiling package ArmTypes
# -- Compiling package body ArmTypes
# -- Loading package ArmTypes
# -- Loading package ArmTypes
# -- Loading package ArmConfiguration
# -- Compiling package TB_Tools
# ** Warning: ./src/TB_Tools.vhd(152): (vcom-1236) Shared variables must be of a protected type.
# ** Warning: ./src/TB_Tools.vhd(153): (vcom-1236) Shared variables must be of a protected type.
# -- Compiling package body TB_Tools
# -- Loading package TB_Tools
vsim -voptargs=+acc work.armarithinstructionctrl_tb
# vsim -voptargs=+acc work.armarithinstructionctrl_tb 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading ieee.std_logic_textio(body)
# Loading work.armtypes(body)
# Loading arm_sim_lib.armtypes(body)
# Loading work.armarithinstructionctrl_tb(bench)
# Loading work.armarithinstructionctrl(behave)
# Loading arm_sim_lib.armcoarseinstructiondecoder(behave)
# Loading arm_sim_lib.armarithinstructionctrl(behave)
run -all
# ------------------- Testcase 1 / 28: -------------------
#   Instruktion: add    r0, r1, r2, lsl #2
#   binaer:      11100000100000010000000100000010
#   Zeit:        0 ps
# 
# 
# ------------------- Testcase 2 / 28: -------------------
#   Instruktion: add    r3, r4, r5, lsl r6
#   binaer:      11100000100001000011011000010101
#   Zeit:        10000 ps
# 
# 
# ------------------- Testcase 3 / 28: -------------------
#   Instruktion: add    r7, r8, #16       
#   binaer:      11100010100010000111000000010000
#   Zeit:        20000 ps
# 
# 
# ------------------- Testcase 4 / 28: -------------------
#   Instruktion: add    r15, r9, r10      
#   binaer:      11100000100010011111000000001010
#   Zeit:        30000 ps
# 
# 
# ------------------- Testcase 5 / 28: -------------------
#   Instruktion: sub    r0, r1, r2, lsl #2
#   binaer:      11100000010000010000000100000010
#   Zeit:        40000 ps
# 
# 
# ------------------- Testcase 6 / 28: -------------------
#   Instruktion: sub    r3, r4, r5, lsl r6
#   binaer:      11100000010001000011011000010101
#   Zeit:        50000 ps
# 
# 
# ------------------- Testcase 7 / 28: -------------------
#   Instruktion: sub    r7, r8, #16       
#   binaer:      11100010010010000111000000010000
#   Zeit:        60000 ps
# 
# 
# ------------------- Testcase 8 / 28: -------------------
#   Instruktion: sub    r15, r9, r10      
#   binaer:      11100000010010011111000000001010
#   Zeit:        70000 ps
# 
# 
# ------------------- Testcase 9 / 28: -------------------
#   Instruktion: mov    r0, r1, lsl #2    
#   binaer:      11100001101000000000000100000001
#   Zeit:        80000 ps
# 
# 
# ------------------- Testcase 10 / 28: -------------------
#   Instruktion: mvn    r3, r4, lsl r6    
#   binaer:      11100001111000000011011000010100
#   Zeit:        90000 ps
# 
# 
# ------------------- Testcase 11 / 28: -------------------
#   Instruktion: orr    r7, r8, #16       
#   binaer:      11100011100010000111000000010000
#   Zeit:        100000 ps
# 
# 
# ------------------- Testcase 12 / 28: -------------------
#   Instruktion: and    r15, r9, r10      
#   binaer:      11100000000010011111000000001010
#   Zeit:        110000 ps
# 
# 
# ------------------- Testcase 13 / 28: -------------------
#   Instruktion: adds   r0, r1, r2, lsl #2
#   binaer:      11100000100100010000000100000010
#   Zeit:        120000 ps
# 
# 
# ------------------- Testcase 14 / 28: -------------------
#   Instruktion: adds   r3, r4, r5, lsl r6
#   binaer:      11100000100101000011011000010101
#   Zeit:        130000 ps
# 
# 
# ------------------- Testcase 15 / 28: -------------------
#   Instruktion: adds   r7, r8, #16       
#   binaer:      11100010100110000111000000010000
#   Zeit:        140000 ps
# 
# 
# ------------------- Testcase 16 / 28: -------------------
#   Instruktion: adds   r15, r9, r10      
#   binaer:      11100000100110011111000000001010
#   Zeit:        150000 ps
# 
# 
# ------------------- Testcase 17 / 28: -------------------
#   Instruktion: subs   r0, r1, r2, lsl #2
#   binaer:      11100000010100010000000100000010
#   Zeit:        160000 ps
# 
# 
# ------------------- Testcase 18 / 28: -------------------
#   Instruktion: subs   r3, r4, r5, lsl r6
#   binaer:      11100000010101000011011000010101
#   Zeit:        170000 ps
# 
# 
# ------------------- Testcase 19 / 28: -------------------
#   Instruktion: subs   r7, r8, #16       
#   binaer:      11100010010110000111000000010000
#   Zeit:        180000 ps
# 
# 
# ------------------- Testcase 20 / 28: -------------------
#   Instruktion: subs   pc, lr            
#   binaer:      11100000010111111111000000001110
#   Zeit:        190000 ps
# 
# 
# ------------------- Testcase 21 / 28: -------------------
#   Instruktion: cmp    r0, r1, lsl #2    
#   binaer:      11100001010100000000000100000001
#   Zeit:        200000 ps
# 
# 
# ------------------- Testcase 22 / 28: -------------------
#   Instruktion: cmn    r3, r4, lsl r6    
#   binaer:      11100001011100110000011000010100
#   Zeit:        210000 ps
# 
# 
# ------------------- Testcase 23 / 28: -------------------
#   Instruktion: tst    r7, #16           
#   binaer:      11100011000101110000000000010000
#   Zeit:        220000 ps
# 
# 
# ------------------- Testcase 24 / 28: -------------------
#   Instruktion: teq    r15, r10          
#   binaer:      11100001001111110000000000001010
#   Zeit:        230000 ps
# 
# 
# ------------------- Testcase 25 / 28: -------------------
#   Instruktion: cmp    r7, #16           
#   binaer:      11100011010101110000000000010000
#   Zeit:        240000 ps
# 
# 
# ------------------- Testcase 26 / 28: -------------------
#   Instruktion: cmn    r15, r11          
#   binaer:      11100001011111110000000000001011
#   Zeit:        250000 ps
# 
# 
# ------------------- Testcase 27 / 28: -------------------
#   Instruktion: tst    r0, r1, lsl #2    
#   binaer:      11100001000100000000000100000001
#   Zeit:        260000 ps
# 
# 
# ------------------- Testcase 28 / 28: -------------------
#   Instruktion: teq    r3, r4, lsl r6    
#   binaer:      11100001001100110000011000010100
#   Zeit:        270000 ps
# 
# 
# ------------------------ Ergebnis: ----------------------
# Erfolgreiche Testcases: 28 / 28
# Fehlerhafte Signale:    0
# 
# ** Failure:  EOT (END OF TEST) - Diese Fehlermeldung stoppt den Simulator unabhaengig von tatsaechlich aufgetretenen Fehlern!
#    Time: 280 ns  Iteration: 0  Process: /armarithinstructionctrl_tb/tb File: ./src/ArmArithInstructionCtrl_tb.vhd
# Break in Process tb at ./src/ArmArithInstructionCtrl_tb.vhd line 210
